{"name": "CoFI", "link_git": null, "children": [{"name": "Parameter estimation", "link_git": null, "children": [{"name": "Optimization", "link_git": null, "children": [{"name": "Non linear", "link_git": null, "children": [{"name": "scipy.optimize.minimize", "link_git": null, "children": [{"name": "Nelder-Mead", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the Simplex algorithm."}, {"name": "Powell", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "A modification of Powell\u2019s method which is a conjugate direction method."}, {"name": "CG", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses a nonlinear conjugate gradient algorithm by Polak and Ribiere, a variant of the Fletcher-Reeves method"}, {"name": "BFGS", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the quasi-Newton method of Broyden, Fletcher, Goldfarb, and Shanno (BFGS)."}, {"name": "Newton-CG", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses a Newton-CG algorithm (also known as the truncated Newton method)."}, {"name": "L-BFGS-B", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the L-BFGS-B algorithm for bound constrained minimization."}, {"name": "TNC", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses a truncated Newton algorithm to minimize a function with variables subject to bounds."}, {"name": "COBYLA", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the Constrained Optimization BY Linear Approximation (COBYLA) method."}, {"name": "SLSQP", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses Sequential Least SQuares Programming to minimize a function of several variables with any combination of bounds, equality and inequality constraints."}, {"name": "trust-constr", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "A trust-region algorithm for constrained optimization."}, {"name": "dogleg", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the dog-leg trust-region algorithm for unconstrained minimization."}, {"name": "trust-ncg", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the Newton conjugate gradient trust-region algorithm for unconstrained minimization."}, {"name": "trust-exact", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "A trust-region method for unconstrained minimization in which quadratic subproblems are solved almost exactly."}, {"name": "trust-krylov", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "children": [], "description": "Uses the Newton GLTR trust-region algorithm for unconstrained minimization. "}], "description": null}, {"name": "cofi.simple_newton", "link_git": null, "children": [{"name": "Newton's method in optimization", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_cofi_simple_newton.py", "children": [], "description": "CoFI's own implementation of the Newton's method in optimization with stopping criteria."}], "description": null}, {"name": "scipy.optimize.least_squares", "link_git": null, "children": [{"name": "trf", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "children": [], "description": "Trust Region Reflective algorithm, particularly suitable for large sparse problems with bounds."}, {"name": "dogbox", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "children": [], "description": "Dogleg algorithm with rectangular trust regions, typical use case is small problems with bounds."}, {"name": "lm", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "children": [], "description": "Levenberg-Marquardt algorithm as implemented in MINPACK. Doesn\u2019t handle bounds and sparse Jacobians."}], "description": null}, {"name": "torch.optim", "link_git": null, "children": [{"name": "Adadelta", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "ADADELTA, an Adaptive Learning Rate Method."}, {"name": "Adagrad", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Adaptive Subgradient Methods for Online Learning and Stochastic Optimization."}, {"name": "Adam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Adam, a Method for Stochastic Optimization."}, {"name": "AdamW", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Decoupled Weight Decay Regularization."}, {"name": "SparseAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Lazy version of Adam algorithm suitable for sparse tensors."}, {"name": "Adamax", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Adamax algorithm (a variant of Adam based on infinity norm)."}, {"name": "ASGD", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "Averaged Stochastic Gradient Descent."}, {"name": "LBFGS", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "L-BFGS algorithm, heavily inspired by minFunc."}, {"name": "NAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "NAdam algorithm, incorporating Nesterov Momentum into Adam"}, {"name": "RAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "RAdam algorithm, on the variance of the adaptive learning rate and beyond"}, {"name": "RMSprop", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "RMSprop, a form of stochastic gradient descent where the gradients are divided by a running average of their recent magnitude"}, {"name": "Rprop", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "The resilient backpropagation algorithm."}, {"name": "SGD", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "children": [], "description": "The stochastic gradient descent (optionally with momentum)."}], "description": null}], "description": null}], "description": null}, {"name": "Matrix based solvers", "link_git": null, "children": [{"name": "Linear system solvers", "link_git": null, "children": [{"name": "scipy.linalg.lstsq", "link_git": null, "children": [{"name": "gelsd", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "children": [], "description": "Solve linear least squares using divide-and-conquer SVD."}, {"name": "gelsy", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "children": [], "description": "Solve linear least squares using complete orthogonal factorization."}, {"name": "gelss", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "children": [], "description": "Solve linear least squares using SVD."}], "description": null}], "description": null}], "description": null}], "description": null}, {"name": "Ensemble methods", "link_git": null, "children": [{"name": "Bayesian sampling", "link_git": null, "children": [{"name": "McMC samplers", "link_git": null, "children": [{"name": "emcee", "link_git": null, "children": [{"name": "MHMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A general Metropolis-Hastings proposal."}, {"name": "GaussianMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A Metropolis step with a Gaussian proposal function."}, {"name": "RedBlueMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "An abstract red-blue ensemble move with parallelization as described in Foreman-Mackey et al. (2013)."}, {"name": "StretchMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A Goodman & Weare (2010) \u201cstretch move\u201d with parallelization as described in Foreman-Mackey et al. (2013)."}, {"name": "WalkMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A Goodman & Weare (2010) \u201cwalk move\u201d with parallelization as described in Foreman-Mackey et al. (2013)."}, {"name": "KDEMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A proposal using a KDE of the complementary ensemble."}, {"name": "DEMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A proposal using differential evolution."}, {"name": "DESnookerMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "children": [], "description": "A snooker proposal using differential evolution."}], "description": null}], "description": null}], "description": null}], "description": null}], "description": null}